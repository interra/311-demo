{
    "title": "Best and Worst of Philly - 2017",
    "backend": "cartodb",
    "addlQs": [
        "getServiceNumbersByNeighborhood",
        "getOutstandingRequests"
    ],
    "dataResources": [
        {
            "resourceHandle": "philly_311",
            "resourceType": "cartodb",
            "url": "https://phl.carto.com/api/v2/sql",
            "query": "?q=SELECT service_name, COUNT(cartodb_id) FROM public_cases_fc WHERE service_name NOT IN ('Information Request') GROUP BY service_name ORDER BY count DESC LIMIT 10"
        }
    ],
    "regions": [
        {
            "id": "topmatter",
            "className": "row",
            "children": [
                {
                    "type": "Markup",
                    "content": "<p className='topmatter col-md-12 lead'>We present to you the best and worst of Phialdelphia, the city we love and love to hate. For each of a handfull of 311 request categories, we present (by area) the best and worst neighborhoods by number of complaints, the City's response time to problems, and outstanding problems.</p>"
                }
            ]
        },
        {
            "id": "filters",
            "className": "col-md-6",
            "children": [
                {
                    "type": "NeighborhoodFilter",
                    "className": "map-left",
                    "filterKey": "neighborhood",
                    "filters": ["service_name"],
                    "componentKey": "neighborhoodMap",
                    "cardProps": {
                        "header": {
                            "template": "Unanswered  \"%%var%%\" Requests",
                            "filterVal": "service_name",
                            "default": "No data shown - select Request type!!",
                            "joiner": ","

                        },
                        "info": "This choropleth map shows the number of requests by neighborhood for a given request type. Use the select filter below to change the request type."
                    },
                    "leafletSettings": { 
                          "center": [39.9728, -75.1638],
                          "zoomControl": false,
                          "zoom": 12, 
                          "maxZoom": 19, 
                          "minZoom": 6, 
                          "scrollWheelZoom": false,
                          "legends": true,
                          "infoControl": false,
                          "attributionControl": true,
                          "selectedFillColor": "red",
                          "selectedFillOpacity": 0.65,
                          "unselectedFillColor": "transparent",
                          "unselectedFillOpacity": 0,
                          "tileUrl": "http://{s}.tile.osm.org/{z}/{x}/{y}.png",
                          "tileAttr": "&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors"
                    },
                    "choroplethSettings": {
                        "choroplethStyle": {
                            "fillColor": "#F28F3B",
                            "weight": 2,
                            "opacity": 1,
                            "color": "white",
                            "dashArray": 3,
                            "fillOpacity": 0.5
                        },
                        "choroplethColorScale": ["#f1eef6", "#d7b5d8", "#df65b0", "#dd1c77", "#980043"],
                        "steps": 5,
                        "legendCaption": "Requests by Neighborhood",
                        "mode": "e"
                    },
                    "multi": true
                },
                {
                    "type": "Autocomplete",
                    "filterKey": "service_name",
                    "className": "filter-right",
                    "field": "service_name",
                    "multi": false,
                    "noData": true,
                    "placeholder": "SELECT A REQUEST TYPE",
                    "operation": "IN",
                    "options": 
			[
			    {"label": "Miscellaneous", "value": "Miscellaneous"},
			    {"label": "Maintenance Residential or Commercial", "value": "Maintenance Residential or Commercial"},
			    {"label": "Rubbish/Recyclable Material Collection", "value":"Rubbish/Recyclable Material Collection"}, 
			    {"label": "Illegal Dumping", "value": "Illegal Dumping"},                
			    {"label": "Abandoned Vehicle", "value":"Abandoned Vehicle"},                      
			    {"label": "Graffiti Removal", "value": "Graffiti Removal"},                       
			    {"label": "Street Defect", "value": "Street Defect"},     
			    {"label": "Street Light Outage", "value": "Street Light Outage"},                 
			    {"label": "Vacant Lot Clean-Up", "value": "Vacant Lot Clean-Up"},
			    {"label": "Vacant House or Commercial", "value": "Vacant House or Commercial"},
			    {"label": "Salting", "value": "Salting"},                           
			    {"label": "Sanitation / Dumpster Violation", "value": "Sanitation / Dumpster Violation"},
			    {"label": "Traffic Signal Emergency", "value": "Traffic Signal Emergency"},
			    {"label": "Street Trees", "value": "Street Trees"},     
			    {"label": "Building Dangerous", "value": "Building Dangerous"},                 
			    {"label": "Smoke Detector", "value": "Smoke Detector"},   
			    {"label": "Building Construction", "value": "Building Construction"}, 
			    {"label": "Construction Site Task Force", "value": "Construction Site Task Force"}
                        ]
                }
            ]
        },
        {
            "id": "region-00",
            "title": "Neighborhood Impact",
            "className": "col-md-6",
            "children": [
                {
                    "type": "Metric",
                    "componentKey": "metric-total",
                    "resourceHandle": "philly_311",
                    "filters": ["service_name"],
                    "background": "rgba(192,66,90,.8)",
                    "icon": "phone",
                    "caption": "311 Reports in 2017",
                    "dataType": "Scalar",
                    "where": [],
                    "count": "service_name"
                },
                {
                    "type": "Chart",
                    "componentKey": "discrete-1",
                    "cardProps": {
                        "header": {
                            "template": "Most \"%%var%%\" Requests",
                            "default": "No request type selected",
                            "filterVal": "service_name",
                            "joiner": ","
                        },
                        "cardClasses": ["discrete-1", "discrete"]
                    },
                    "dataType": "ChartJS",
                    "resourceHandle": "neighb_counts",
                    "limit": 10,
                    "order": {
                        "attribute": "count",
                        "order": "DESC"
                    },
                    "where": [
                        {
                            "attribute": "service_name",
                            "value": {"filterVal": "service_name"}
                        }
                    ],
                    "dataFields": [
                        {
                            "resourceHandle": "neighb_counts",
                            "field": "neighborhood",
                            "type": "STRING",
                            "fieldHandle": "neighborhood"
                        },
                        {
                            "resourceHandle": "neighb_counts",
                            "field": "count",
                            "type": "INTEGER",
                            "fieldHandle": "count"
                        }
                    ],
                    "chartOptions": {
                        "scales": {
                            "xAxes": [
                                {
                                    "stacked": false,
                                    "beginAtZero": true,
                                    "ticks": {
                                        "stepSize": 1,
                                        "fontColor": "yellow",
                                        "min": 0,
                                        "autoSkip": false
                                    }
                                }
                            ],
                            "yAxes": [
                              {
                                "beginAtZero": true,
                                "ticks": {
                                  "fontColor": "white",
                                  "min": 0
                                }
                              }
                            ]
                        }
                    },
                    "series": [
                        {
                            "label": "Number of requests",
                            "x": "neighborhood",
                            "y": "count",
                            "bg": "rgba(255,99,132,0.6)",
                            "border": "rgba(255,99,132,1)",
                            "bgHover": "rgba(255,99,132,0.8)",
                            "borderHover": "rgba(255,99,132,1)"
                        }
                    ]
                },
                {
                    "type": "Chart",
                    "componentKey": "discrete-2",
                    "cardProps": {
                        "header": {
                            "template": "Least \"%%var%%\" Requests",
                            "default": "No request type selected",
                            "filterVal": "service_name",
                            "joiner": ","
                        },
                        "cardClasses":["discrete-2", "discrete"]
                    },
                    "dataType": "ChartJS",
                    "resourceHandle": "neighb_counts",
                    "limit": 20,
                    "order": {
                        "attribute": "count",
                        "order": "ASC"
                    },
                    "where": [
                        {
                            "attribute": "service_name",
                            "value": {"filterVal": "service_name"}
                        }
                    ],
                    "dataFields": [
                        {
                            "resourceHandle": "neighb_counts",
                            "field": "neighborhood",
                            "type": "STRING",
                            "fieldHandle": "neighborhood"
                        },
                        {
                            "resourceHandle": "neighb_counts",
                            "field": "count",
                            "type": "INTEGER",
                            "fieldHandle": "count"
                        }
                    ],
                    "series": [
                        {
                            "label": "Least requests",
                            "x": "neighborhood",
                            "y": "count",
                            "bg": "rgba(255,99,132,0.6)",
                            "border": "rgba(255,99,132,1)",
                            "bgHover": "rgba(255,99,132,0.8)",
                            "borderHover": "rgba(255,99,132,1)"
                        }
                    ],
                    "chartOptions": {
                        "scales": {
                            "xAxes": [
                                {
                                    "stacked": false,
                                    "ticks": {
                                        "fontColor": "yellow",
                                        "autoSkip": false
                                    }
                                }
                            ],
                            "yAxes": [
                              {
                                "beginAtZero": true,
                                "ticks": {
                                  "fontColor": "white",
                                  "min": 0,
                                  "stepSize": 1
                                }
                              }
                            ]
                        }
                    
                    }
                }
            ]
        },
        {
            "id": "region-1",
            "className": "col-md-12",
            "children": [
                {
                    "type": "ChartNVD3",
                    "componentKey": "chart-3",
                    "cardProps": {
                        "cardClasses": ["pie-chart", "other-311-requests"],
                        "header": "Other Common 311 Requests",
                        "info": "This chart shows the most common 311 requests for the selected neighborhood. If no neighborhood is selected then it shows values for the whole city. Click on the map to the right to select a neighborhood."
                    },
                    "dataType": "NVD3PieChartSeries",
                    "resourceHandle": "philly_311",
                    "count": "service_name",
                    "order": {
                        "attribute": "count",
                        "order": "DESC"
                    },
                    "limit": 10,
                    "where": [
                        {
                            "op": "notIn",
                            "attribute": "service_name",
                            "value": ["Information Request"]
                        }
                    ],
                    "x": "service_name",
                    "y": "count",
                    "dataFields": [
                        {
                            "resourceHandle": "philly_311",
                            "field": "service_name",
                            "type": "STRING",
                            "fieldHandle": "serviceName"
                        }
                    ],
                    "settings": {
                        "type": "pieChart",
                        "height": 800,
                        "donut": true,
                        "labelType": "percent"
                    }
                }
	    ]
        }
   ]
}
